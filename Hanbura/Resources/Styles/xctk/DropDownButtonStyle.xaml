<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit">
	<conv:InverseBoolConverter x:Key="InverseBoolConverter" />
	<Style TargetType="{x:Type xctk:DropDownButton}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrushKey}" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="True">
						<ToggleButton x:Name="PART_DropDownButton"
									  Grid.Column="1"
									  IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									  IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
							<ToggleButton.Template>
								<ControlTemplate TargetType="ToggleButton">
									<ContentPresenter />
								</ControlTemplate>
							</ToggleButton.Template>
							<Grid>
								<xctk:ButtonChrome x:Name="ToggleButtonChrome"
												   Background="{TemplateBinding Background}"
												   Foreground="{TemplateBinding Foreground}"
												   BorderThickness="{TemplateBinding BorderThickness}"
												   BorderBrush="{TemplateBinding BorderBrush}"
												   RenderChecked="{TemplateBinding IsOpen}"
												   RenderEnabled="{TemplateBinding IsEnabled}"
												   Padding="1,0,1,0"
												   RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
												   RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<ContentPresenter Margin="{TemplateBinding Padding}"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  RecognizesAccessKey="true" />
										<Grid x:Name="arrowGlyph" IsHitTestVisible="False" Margin="2,0,3,0" Grid.Column="1">
											<Path x:Name="Arrow"  Width="7" Height="4"
												  HorizontalAlignment="Center"
												  VerticalAlignment="Center"
												  Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
												  Fill="{TemplateBinding Foreground}" />
										</Grid>
									</Grid>
								</xctk:ButtonChrome>
							</Grid>
						</ToggleButton>

						<Popup x:Name="PART_Popup" 
                         HorizontalOffset="1"
                         VerticalOffset="1"
                         AllowsTransparency="True"
                         StaysOpen="False"
                         Placement="Bottom"
                         Focusable="False"
                         IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}">
							<Border BorderThickness="1" Background="{DynamicResource BackgroundBrushKey}" BorderBrush="{TemplateBinding BorderBrush}">
								<ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />
							</Border>
						</Popup>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>